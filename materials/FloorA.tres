[gd_resource type="ShaderMaterial" load_steps=6 format=2]

[ext_resource path="res://actors/floor/BaseGround.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeTexture" id=11]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeIf" id=12]
default_input_values = [ 0, 0.0, 1, 0.0, 2, 0.0001, 3, Vector3( 0, 0, 0 ), 4, Vector3( 0, 0, 0 ), 5, Vector3( 0, 0, 0 ) ]

[sub_resource type="VisualShaderNodeColorUniform" id=13]
uniform_name = "TeamColor"

[sub_resource type="VisualShader" id=9]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_3;
uniform vec4 TeamColor : hint_color;



void vertex() {
// Output:0

}

void fragment() {
// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, UV.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// ColorUniform:5
	vec3 n_out5p0 = TeamColor.rgb;
	float n_out5p1 = TeamColor.a;

// If:4
	float n_in4p1 = 0.00000;
	float n_in4p2 = 0.00010;
	vec3 n_out4p0;
	if(abs(n_out3p1 - n_in4p1) < n_in4p2)
	{
		n_out4p0 = n_out5p0;
	}
	else if(n_out3p1 < n_in4p1)
	{
		n_out4p0 = n_out5p0;
	}
	else
	{
		n_out4p0 = n_out3p0;
	}

// Output:0
	COLOR.rgb = n_out4p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 0, 75 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 880, 80 )
nodes/fragment/3/node = SubResource( 11 )
nodes/fragment/3/position = Vector2( 100, 0 )
nodes/fragment/4/node = SubResource( 12 )
nodes/fragment/4/position = Vector2( 480, 140 )
nodes/fragment/5/node = SubResource( 13 )
nodes/fragment/5/position = Vector2( 140, 260 )
nodes/fragment/connections = PoolIntArray( 3, 1, 4, 0, 4, 0, 0, 0, 3, 0, 4, 4, 5, 0, 4, 3, 5, 0, 4, 5 )

[resource]
shader = SubResource( 9 )
shader_param/TeamColor = Color( 0.729412, 0.0392157, 0.054902, 1 )
